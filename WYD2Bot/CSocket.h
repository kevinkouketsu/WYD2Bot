#include <WinSock.h>
#include <ctime>

#ifndef __SOCKET_H__
#define __SOCKET_H__

#define ACCEPT_USER WM_USER + 1
#define RECV_USER   WM_USER + 2
#define WM_SOCKET   WM_USER 
#define WM_SERVER	0x600

#define INITCODE               0x1F11F311

#define RECV_BUFFER_SIZE      (32*1024) 
#define SEND_BUFFER_SIZE      (32*1024) 

#define MAX_MESSAGE_SIZE           16384 


#pragma comment (lib, "WS2_32.lib")

class Server
{
private:
	INT32 CurrentTime;
	INT32 HashIncrement;

public:
		Server();
		~Server();

		SOCKADDR_IN Service;
		BOOL Connect();
		BOOL Receive();
		BOOL AddMessage(char *pMsg, int Size);

		void RefreshRecvBuffer();
		void RefreshSendBuffer();

		INT32 LastPacket;
		INT32 TimePacket;
public:
		INT32 hServer;
		WSADATA wSaData;
		unsigned int  Sock;
		char   *pSendBuffer;
		char   *pRecvBuffer;
		int		nSendPosition;
		int		nRecvPosition;
		int		nProcPosition;
		int		nSentPosition;
		int     Init;	
		
		char *ReadMessage(int *ErrorCode, int* ErrorType);
		BOOL SendMessageA();


		void SethServer(UINT32 value);
		void SetHashIncrement(INT32 value);

		INT32			GethServer();
		SOCKADDR_IN		*GetService();
		WSADATA			*GetwSaData();
		INT32			GetCurrenttime();
		INT32			GetHashIncrement();

};


static BYTE KeyTable[512] = {
	0xBD, 0x7A, 0xB5, 0x6A, 0xD5, 0x70, 0xAA, 0x72, 0xE5, 0xCA, 0xBF, 0xFD, 0xF6, 0x3B, 0xA4, 0x62,
	0xC5, 0x4A, 0xBF, 0xFE, 0x5A, 0xF1, 0x57, 0x29, 0xFC, 0x22, 0x85, 0x9F, 0x7F, 0xFE, 0xB9, 0x42,
	0x85, 0x0A, 0x3F, 0xFC, 0x50, 0xFE, 0xFB, 0xEF, 0x7F, 0x80, 0x7C, 0xF7, 0xDD, 0xF7, 0xDF, 0x7C,
	0xF3, 0x2D, 0xE4, 0xEB, 0xAF, 0xBF, 0xF9, 0xF2, 0xCB, 0xAF, 0x98, 0x7C, 0xFE, 0xF9, 0x17, 0x90,
	0xCF, 0x3E, 0xFB, 0xBC, 0x6C, 0xD9, 0x72, 0x90, 0x32, 0x65, 0xCA, 0x96, 0x2E, 0x5D, 0xE6, 0xD3,
	0x4F, 0x4B, 0x41, 0x3E, 0xF9, 0xE4, 0xD3, 0x8F, 0x3F, 0xFE, 0x04, 0x52, 0xB2, 0xE4, 0xC7, 0x1F,
	0x7D, 0x54, 0xF2, 0xC3, 0x0F, 0x3F, 0x82, 0x7C, 0xF0, 0xC1, 0x87, 0x90, 0x12, 0x25, 0x3E, 0x78,
	0xFF, 0xFD, 0x12, 0x90, 0xF7, 0xDE, 0x7B, 0x9F, 0x97, 0xE2, 0xC5, 0xDF, 0x2B, 0x56, 0xAC, 0xB8,
	0x56, 0x8A, 0x16, 0x2D, 0x26, 0x0B, 0x7F, 0x16, 0xE9, 0x99, 0xA8, 0xF2, 0x41, 0xCE, 0xB8, 0x05,
	0x13, 0xF9, 0x8E, 0xAA, 0x63, 0x39, 0x01, 0x7F, 0xC0, 0x12, 0xF3, 0x97, 0xC8, 0x57, 0xC9, 0xF1,
	0xAC, 0x22, 0x10, 0x16, 0x4A, 0x4A, 0x81, 0x1D, 0x4B, 0x91, 0x38, 0x56, 0x0B, 0x10, 0x80, 0x48,
	0x41, 0x04, 0x44, 0x57, 0x58, 0x1A, 0x86, 0x15, 0x84, 0x07, 0x8A, 0xD5, 0x8E, 0x81, 0x53, 0xA4,
	0x48, 0xD1, 0xC2, 0x85, 0x8B, 0x14, 0x2A, 0x54, 0xB8, 0x60, 0xC1, 0x42, 0x90, 0x02, 0x05, 0x0A,
	0xE6, 0xCF, 0x5F, 0x20, 0x5F, 0xBE, 0xFC, 0x79, 0xF3, 0xE6, 0x63, 0x92, 0x27, 0x4F, 0x5E, 0x26,
	0xB9, 0x73, 0xE7, 0xD1, 0x4A, 0xAE, 0x5C, 0xB9, 0x21, 0xBA, 0xA7, 0x5C, 0x8A, 0x94, 0xEF, 0xA2,
	0x3A, 0x90, 0x8B, 0xC1, 0x1F, 0xA0, 0x78, 0xF9, 0xF0, 0x9F, 0x0B, 0xF8, 0x29, 0x45, 0xBA, 0x26,
	0x72, 0xED, 0xE4, 0xA2, 0xB2, 0xEA, 0x40, 0x72, 0xE4, 0xC8, 0x99, 0x89, 0x24, 0x47, 0x4E, 0x2E,
	0xE4, 0x10, 0x83, 0x7E, 0xED, 0x72, 0xE6, 0xCC, 0x05, 0x91, 0xCF, 0xE2, 0x58, 0x6E, 0x5F, 0xB4,
	0x8B, 0x04, 0x79, 0x01, 0x28, 0x09, 0xB4, 0x05, 0x3A, 0x03, 0xCD, 0x61, 0x9D, 0x08, 0x5A, 0x24,
	0x77, 0x19, 0xD6, 0x0D, 0x75, 0xFB, 0x42, 0xBA, 0x46, 0xB2, 0xFB, 0xA6, 0x4C, 0xF8, 0xCE, 0xFE,
	0xBE, 0x14, 0x50, 0x01, 0x04, 0x76, 0xAC, 0x1A, 0x0A, 0x52, 0xFC, 0x93, 0x8D, 0x33, 0x0C, 0x31,
	0xD6, 0xE9, 0x20, 0x5C, 0x8F, 0x2B, 0xC0, 0xB4, 0x11, 0xAA, 0x28, 0xB7, 0x42, 0xF6, 0xEC, 0x39,
	0xDE, 0x7D, 0x37, 0x5B, 0xD6, 0xAC, 0x90, 0x77, 0xB3, 0x64, 0x79, 0xF7, 0x9D, 0x2C, 0x59, 0xDF,
	0x79, 0x07, 0x92, 0xE5, 0x6D, 0xC8, 0xDB, 0x2F, 0x43, 0xD8, 0xAD, 0xED, 0xF2, 0x4E, 0x96, 0x2C,
	0x2A, 0xE1, 0xCF, 0xA6, 0xE0, 0x18, 0x55, 0x73, 0x2A, 0x59, 0xB2, 0x64, 0xD5, 0x88, 0x08, 0x4E,
	0x46, 0x14, 0xB4, 0x9A, 0x5D, 0xB2, 0xBE, 0xFB, 0xAE, 0x4A, 0xE4, 0x53, 0x2E, 0x1D, 0x40, 0x13,
	0x5E, 0xAC, 0x30, 0xF5, 0x93, 0xC5, 0x85, 0xBB, 0x43, 0x75, 0xED, 0xDA, 0x2B, 0x5E, 0xFE, 0xEE,
	0xBB, 0xD9, 0x99, 0x64, 0xCB, 0x96, 0x03, 0x92, 0x3D, 0x7B, 0x4E, 0x26, 0x39, 0x30, 0xE6, 0xE4,
	0xCA, 0x0D, 0xC9, 0x25, 0xCD, 0x2F, 0xD2, 0xF8, 0x9F, 0x27, 0x2F, 0x3A, 0x83, 0x62, 0x48, 0xC7,
	0x94, 0xA4, 0x90, 0xFC, 0xF9, 0x31, 0x4F, 0x29, 0xA4, 0x40, 0x01, 0x4C, 0x5E, 0x96, 0xA4, 0x60,
	0x41, 0x4C, 0x76, 0x6A, 0x29, 0x54, 0x08, 0x93, 0xA0, 0x05, 0xC1, 0x5C, 0x89, 0x9E, 0x8B, 0xFE,
	0xAB, 0x91, 0x22, 0xE8, 0xD7, 0x96, 0xA5, 0x28, 0x86, 0x02, 0x4E, 0xE4, 0x45, 0x88, 0xBC, 0x02
};
extern Server cServer;

#endif